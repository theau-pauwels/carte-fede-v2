---
import Layout from "@layouts/Layout.astro";
---
<Layout title="Admin">
  <main class="flex-1 flex flex-col gap-4 items-center p-4 justify-center">
  <section class="w-full max-w-md">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style> 
      form { max-width: 520px; display: grid; gap: .75rem; margin-top: 1rem; }
      input, button { padding: .6rem .8rem; font-size: 1rem; }
      .row { display: grid; grid-template-columns: 1fr 1fr; gap: .5rem; }
      .bar { display:flex; gap:.75rem; align-items:center; }
      .ok { color: #0a7; }
      .err { color: #b00020; }
      .muted { color:#666; font-size:.9rem; }
      a.btn { display:inline-block; padding:.4rem .6rem; border:1px solid #ddd; border-radius:.5rem; text-decoration:none; }
    </style>

    <h1 class="font-semibold text-2xl text-blue-800 bg-white mb-1">Créer un utilisateur</h1>
    <p class="muted">Renseigner <strong>member_id (6 chiffres du matricule UMONS)</strong> OU <strong>email</strong>.</p>
    <form id="create">
      <div class="row">
        <label>Prénom<br/>
          <input 
          name="prenom" 
          class="border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          required></label>
        <label>Nom<br/>
          <input 
          name="nom" 
          class="border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
          required></label>
      </div>
      <label>Identifiant (6 chiffres) — option 1<br/>
        <input 
        name="member_id" 
        inputmode="numeric" 
        pattern="\\d{6}" 
        maxlength="6" 
        placeholder="000123"
        class="border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
      </label>
      <div class="muted">OU</div>
      <label>Email — option 2<br/>
        <input 
        name="email" 
        type="email" 
        placeholder="user@example.com"
        class="border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
      </label>
      <label>Mot de passe initial<br/>
        <input 
        name="password" 
        type="password" 
        minlength="8" 
        class="border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
        required>
      </label>
      <button type="submit" 
      class="rounded-lg border-2 border-blue-900 bg-blue-900 px-4 py-2 text-white transition duration-150 hover:bg-blue-50 hover:text-blue-900"
      >Créer</button>
      <div id="msg"></div>
    </form>
  </section>
  </main>
</Layout>

<script>
  async function guard() {
    const r = await fetch('/api/me', { credentials: 'include' });
    if (!r.ok) return location.href = '/login?next=' + encodeURIComponent(location.pathname);
    const me = await r.json();
    if (me.role !== 'admin') return location.href = '/';
    document.getElementById('who').textContent = `Connecté : ${me.email} (${me.role})`;
  }
  guard();

  document.getElementById('logout').onclick = async () => {
    await fetch('/api/auth/logout', { method:'POST', credentials:'include' });
    location.href = '/login';
  };

  document.getElementById('create').addEventListener('submit', async (e) => {
    e.preventDefault();
    const msg = document.getElementById('msg');
    msg.className = ''; msg.textContent = '';
    const data = Object.fromEntries(new FormData(e.target).entries());

    if (!((data.member_id && /^\d{6}$/.test(data.member_id)) || data.email)) {
      msg.className='err'; msg.textContent='Fournir member_id (6 chiffres) OU email.'; return;
    }

    const res = await fetch('/api/admin/users', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify(data),
      credentials: 'include'
    });

    if (res.ok) { msg.className='ok'; msg.textContent='Utilisateur créé ✅'; e.target.reset(); }
    else { try { const j=await res.json(); msg.className='err'; msg.textContent=j.error||('Erreur '+res.status); } catch { msg.textContent='Erreur '+res.status; } }
  });
</script>
